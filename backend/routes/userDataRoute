const express = require("express");
const router = express.Router();
const userData = require("../models/userDataModel");
//const User = require("../models/userModel")
const authMiddleware = require('../middleware/auth');




//CREATE
router.post("/",authMiddleware ,async (req, res) => {
  console.log(req.body);
  const { name, email, phone } = req.body;
  
  try {
    
    const userAdded = await userData.create({
      name: name,
      email: email,
      phone: phone,
      userId:req.user.userId
    });
    res.status(201).json(userAdded);
  } catch (error) {
    console.log(error);
    res.status(400).json({ error: error.message });
  }
});

//GET
//GET
router.get("/",authMiddleware,async (req, res) => {
  try {
    const allUsers = await userData.find({userId: req.user.userId
    });

    res.status(200).json(allUsers);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

  //GET SINGLE USER
router.get("/:id", authMiddleware,async (req, res) => {
    const { id } = req.params;
  
    try {
      const singleUser = await userData.findById({ _id: id});
      res.status(200).json(singleUser);
    } catch (error) {
      res.status(500).json({ error: error.message });
    }
  });

  //DELETE
router.delete("/:id",authMiddleware, async (req, res) => {
    const { id } = req.params;
    try {
      const deletedUser = await userData.findByIdAndDelete({ _id: id });
      res.status(201).json(deletedUser);
    } catch (error) {
      res.status(400).json({ error: error.message });
    }
  });

  //UPDATE
//UPDATE
router.patch("/edit/:id",authMiddleware, async (req, res) => {
  const { id } = req.params;
  console.log("get body", req.body);
  console.log("get id", id);
  //const { name, email, age } = req.body;
  try {
    const updatedUser = await userData.findByIdAndUpdate(id, req.body, {
      new: true,
    });
    res.status(200).json(updatedUser);
  } catch (error) {
    res.status(400).json({ error: error.message });
  }
});



module.exports = router;